<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sKJmMUA7mQAAAABJRU5ErkJggg==
</value>
  </data>
</root>